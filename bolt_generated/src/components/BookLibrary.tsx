import React, { useState, useEffect } from 'react';
import { BookOpen, Filter, Loader, AlertCircle } from 'lucide-react';
import BookCard from './BookCard';
import { supabase } from '../lib/supabase';

// р╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Яр╕Лр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
interface Book {
  id: string;
  title: string;
  author: string;
  description: string;
  cover: string;
  rating: number;
  studentsCount: number;
  category: string;
}

// р╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Яр╕Лр╕кр╕│р╕лр╕гр╕▒р╕Ъ props р╕Чр╕╡р╣Ир╕Др╕нр╕бр╣Вр╕Юр╣Ар╕Щр╕Щр╕Хр╣М BookLibrary р╕Ир╕░р╕гр╕▒р╕Ъ
interface BookLibraryProps {
  onBookSelect: (bookId: string) => void; // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╣Ар╕гр╕╡р╕вр╕Бр╣Ар╕бр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╣Ар╕ер╕╖р╕нр╕Бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
}

const BookLibrary: React.FC<BookLibraryProps> = ({ onBookSelect }) => {
  const [books, setBooks] = useState<Book[]>([]); // р╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
  const [loading, setLoading] = useState(true); // р╕кр╕Цр╕▓р╕Щр╕░р╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕е
  const [error, setError] = useState<string | null>(null); // р╕кр╕Цр╕▓р╕Щр╕░ error
  const [selectedCategory, setSelectedCategory] = useState('all'); // р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б
  const [categories, setCategories] = useState<Array<{id: string, name: string}>>([
    { id: 'all', name: 'р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф' }
  ]); // р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Чр╕╡р╣Ир╕бр╕╡р╕нр╕вр╕╣р╣И

  // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Ир╕▓р╕Б Supabase
  useEffect(() => {
    fetchBooks();
  }, []);

  const fetchBooks = async () => {
    try {
      setLoading(true);
      setError(null);

      // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╣Ар╕кр╕гр╣Зр╕Ир╣Бр╕ер╣Йр╕з
      const { data: booksData, error: booksError } = await supabase
        .from('books')
        .select('*')
        .eq('processing_status', 'completed')
        .order('created_at', { ascending: false });

      if (booksError) throw booksError;

      // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕│р╕Щр╕зр╕Щр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щр╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Бр╕Хр╣Ир╕ер╕░р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
      const booksWithStats = await Promise.all(
        (booksData || []).map(async (book) => {
          // р╕Щр╕▒р╕Ър╕Ир╕│р╕Щр╕зр╕Щ unique users р╕Чр╕╡р╣Ир╕бр╕╡ chat sessions р╕Бр╕▒р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Щр╕╡р╣Й
          const { data: sessionsData, error: sessionsError } = await supabase
            .from('chat_sessions')
            .select('user_id')
            .eq('book_id', book.id);

          if (sessionsError) {
            console.error('Error fetching sessions for book:', book.id, sessionsError);
          }

          const uniqueUsers = new Set(sessionsData?.map(session => session.user_id) || []).size;

          return {
            id: book.id,
            title: book.title,
            author: book.author,
            description: book.description || 'р╣Др╕бр╣Ир╕бр╕╡р╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕в',
            cover: '/api/placeholder/300/400', // placeholder image
            rating: 4.5, // default rating р╕Ир╕Щр╕Бр╕зр╣Ир╕▓р╕Ир╕░р╕бр╕╡р╕гр╕░р╕Ър╕Ъ rating
            studentsCount: uniqueUsers,
            category: book.category
          };
        })
      );

      setBooks(booksWithStats);

      // р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Фр╕╢р╕Зр╕бр╕▓
      const uniqueCategories = [...new Set(booksWithStats.map(book => book.category))];
      const categoryOptions = [
        { id: 'all', name: 'р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф' },
        ...uniqueCategories.map(cat => ({
          id: cat,
          name: getCategoryDisplayName(cat)
        }))
      ];
      setCategories(categoryOptions);

    } catch (err) {
      console.error('Error fetching books:', err);
      setError('р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Др╕Фр╣Й р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З');
    } finally {
      setLoading(false);
    }
  };

  // р╣Бр╕Ыр╕ер╕Зр╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕в
  const getCategoryDisplayName = (category: string): string => {
    const categoryMap: { [key: string]: string } = {
      'science': 'р╕зр╕┤р╕Чр╕вр╕▓р╕ир╕▓р╕кр╕Хр╕гр╣М',
      'math': 'р╕Др╕Ур╕┤р╕Хр╕ир╕▓р╕кр╕Хр╕гр╣М',
      'history': 'р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕ир╕▓р╕кр╕Хр╕гр╣М',
      'language': 'р╕ар╕▓р╕йр╕▓',
      'social': 'р╕кр╕▒р╕Зр╕Др╕бр╕ир╕╢р╕Бр╕йр╕▓',
      'art': 'р╕ир╕┤р╕ер╕Ыр╕░',
      'other': 'р╕нр╕╖р╣Ир╕Щр╣Ж'
    };
    return categoryMap[category] || category;
  };

  // р╕Бр╕гр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Хр╕▓р╕бр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б
  const filteredBooks = selectedCategory === 'all' 
    ? books 
    : books.filter(book => book.category === selectedCategory);

  // р╣Бр╕кр╕Фр╕Зр╣Вр╕лр╕ер╕Фр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е
  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <Loader className="h-16 w-16 text-blue-600 animate-spin mx-auto mb-4" />
          <p className="text-gray-600">р╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Фр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Ир╕▓р╕Б Supabase...</p>
        </div>
      </div>
    );
  }

  // р╣Бр╕кр╕Фр╕З error state
  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center max-w-md">
          <AlertCircle className="h-16 w-16 text-red-500 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-gray-900 mb-2">р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф</h3>
          <p className="text-gray-600 mb-4">{error}</p>
          <button
            onClick={fetchBooks}
            className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            р╕ер╕нр╕Зр╣Гр╕лр╕бр╣И
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* р╕лр╕▒р╕зр╕Вр╣Йр╕нр╕лр╕Щр╣Йр╕▓ */}
        <div className="text-center mb-8">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">р╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Фр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н</h2>
          <p className="text-gray-600 max-w-2xl mx-auto">
            р╣Ар╕ер╕╖р╕нр╕Бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕Др╕╕р╕Ур╕кр╕Щр╣Гр╕И р╣Бр╕ер╣Йр╕зр╣Гр╕Кр╣Й AI р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕вр╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╣Бр╕ер╕░р╕Чр╕│р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕нр╕вр╣Ир╕▓р╕Зр╕ер╕╢р╕Бр╕Лр╕╢р╣Йр╕З
          </p>
          <div className="mt-4 text-sm text-blue-600">
            ЁЯУЪ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б Supabase Database тАв {books.length} р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
          </div>
        </div>

        {/* р╕Хр╕▒р╕зр╕Бр╕гр╕нр╕Зр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И */}
        <div className="mb-8">
          <div className="flex items-center justify-center space-x-2 mb-4">
            <Filter className="h-5 w-5 text-gray-500" />
            <span className="text-gray-700 font-medium">р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И:</span>
          </div>
          <div className="flex flex-wrap justify-center gap-2">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                  selectedCategory === category.id
                    ? 'bg-blue-600 text-white shadow-lg'
                    : 'bg-white text-gray-700 hover:bg-blue-50 border border-gray-200'
                }`}
              >
                {category.name}
              </button>
            ))}
          </div>
        </div>

        {/* р╣Бр╕кр╕Фр╕Зр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Бр╕Ър╕Ъ grid */}
        {filteredBooks.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredBooks.map((book) => (
              <BookCard
                key={book.id}
                {...book}
                onSelect={onBookSelect}
              />
            ))}
          </div>
        ) : (
          /* р╕Бр╕гр╕Ур╕╡р╣Др╕бр╣Ир╕бр╕╡р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н */
          <div className="text-center py-12">
            <BookOpen className="h-16 w-16 text-gray-400 mx-auto mb-4" />
            {selectedCategory === 'all' ? (
              <div>
                <p className="text-gray-500 mb-2">р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ</p>
                <p className="text-sm text-gray-400">р╕нр╕▓р╕Ир╕▓р╕гр╕вр╣Мр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕нр╕▒р╕Юр╣Вр╕лр╕ер╕Фр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕лр╕бр╣Ир╣Др╕Фр╣Й</p>
              </div>
            ) : (
              <div>
                <p className="text-gray-500 mb-2">р╣Др╕бр╣Ир╕Юр╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕Щр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Щр╕╡р╣Й</p>
                <button
                  onClick={() => setSelectedCategory('all')}
                  className="text-blue-600 hover:text-blue-800 text-sm"
                >
                  р╕Фр╕╣р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
                </button>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default BookLibrary;